@model addressBook.Models.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control", @Value=Model.BirthDay.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<br />
<a href="@Url.Action("Create", "PhoneNumbers", new { UserID=Model.UserID })">Add phone number</a><br /><br />

@if(Model.PhoneNumbers!=null)
{
    <table class="table">
        <tr>
            <th>Number</th>
            <th>Type</th>
            <th></th>
            <th></th>
        </tr>

        @foreach(var item in Model.PhoneNumbers)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Number)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                @if (!item.IsDefault)
                    {<td><a href="@Url.Action("MakeDefault", "PhoneNumbers", new { id = item.PhoneNumberID })">Make Default</a></td> }
                 else
                    { <td>Currently default</td>}

                <td>
                    <a href="@Url.Action("Edit", "PhoneNumbers",new { id=item.PhoneNumberID})">Edit</a> |
                    <a href="@Url.Action("Details", "PhoneNumbers",new { id=item.PhoneNumberID})">Details</a> |
                    <a href="@Url.Action("Delete", "PhoneNumbers",new { id=item.PhoneNumberID})">Delete</a>
                </td>
            </tr>
        }

    </table>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
